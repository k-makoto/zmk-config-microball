#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W         &kp E         &kp R        &kp T                                             &kp Y        &kp U  &kp I      &kp O    &mt PRINTSCREEN P
&kp A           &kp S         &kp D         &kp F        &kp G        &kp PRINTSCREEN       &kp HOME       &kp H        &kp J  &kp K      &kp L    &kp PAGE_UP
&kp Z           &kp X         &kp C         &kp V        &kp B        &kp LC(LEFT_ALT)      &kp END        &kp N        &kp M  &kp COMMA  &kp DOT  &kp PAGE_DOWN
&kp LEFT_SHIFT  &kp LEFT_WIN  &kp LEFT_ALT  &lt 6 LANG2  &lt 2 SPACE  &lt 3 LANGUAGE_1      &kp BACKSPACE  &lt 1 ENTER                             &kp RIGHT_CONTROL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp ESCAPE      &kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp HASH       &kp DOLLAR                           &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LESS_THAN  &kp GREATER_THAN  &kp LS(LG(S))
&kp CAPSLOCK    &kp PERCENT      &kp SQT            &kp AMPERSAND  &kp EQUAL   &trans      &kp TAB      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp SLASH      &kp BACKSLASH     &kp QUESTION
&kp LEFT_SHIFT  &kp CARET        &kp GRAVE          &kp AT_SIGN    &kp MINUS   &trans      &kp LS(TAB)  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp SEMICOLON  &kp COLON         &kp PIPE
&kp LCTRL       &trans           &trans             &trans         &trans      &trans      &trans       &trans                                                                        &kp INSERT
            >;
        };

        NUM {
            bindings = <
&kp F1   &kp F2   &kp F3     &kp F4     &kp F5                                       &kp NUMBER_1  &kp NUMBER_2  &kp N3        &kp NUMBER_4  &kp N5
&kp F6   &kp F7   &kp F8     &kp F9     &kp F10           &trans      &kp PAGE_UP    &kp NUMBER_6  &kp N7        &kp N8        &kp N9        &kp N0
&kp F11  &kp F12  &kp LC(C)  &kp LC(P)  &kp LC(LEFT_ALT)  &trans      &kp PAGE_DOWN  &kp PLUS      &kp MINUS     &kp ASTERISK  &kp SLASH     &kp EQUAL
&trans   &trans   &trans     &trans     &trans            &trans      &trans         &trans                                                  &trans
            >;
        };

        ARROW {
            bindings = <
&kp LG(LEFT_ARROW)  &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &kp LG(RIGHT)                      &kp LG(LEFT)  &kp LC(RS(TAB))         &kp UP_ARROW    &kp RC(TAB)              &kp LG(RIGHT_ARROW)
&kp HOME            &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END        &trans      &trans  &kp HOME      &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END
&kp LEFT_SHIFT      &kp LG(LC(LEFT_ARROW))  &trans          &kp LG(LC(RIGHT_ARROW))  &trans         &trans      &trans  &trans        &kp LC(LG(LEFT_ARROW))  &trans          &kp LC(LG(RIGHT_ARROW))  &kp RIGHT_SHIFT
&trans              &trans                  &trans          &trans                   &trans         &trans      &trans  &trans                                                                         &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&to_layer_0 Q  &to_layer_0 W  &to_layer_0 E  &to_layer_0 R           &to_layer_0 T                                         &to_layer_0 Y    &kp U     &kp LC(T)  &to_layer_0 O  &mo 5
&to_layer_0 A  &to_layer_0 S  &to_layer_0 D  &to_layer_0 F           &to_layer_0 G  &trans                      &kp LC(V)  &kp LC(LS(TAB))  &mkp MB1  &mkp MB3   &mkp MB2       &kp LC(TAB)
&to_layer_0 Z  &to_layer_0 X  &to_layer_0 C  &to_layer_0 V           &to_layer_0 B  &trans                      &kp LC(C)  &to_layer_0 N    &mkp MB4  &kp LC(W)  &mkp MB5       &trans
&trans         &trans         &trans         &to_layer_0 LANGUAGE_2  &trans         &to_layer_0 LANGUAGE_1      &trans     &trans                                               &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
