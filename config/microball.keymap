#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

// OS設定を日本語キーボードのまま使用するための変換定義

#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

// 1. Mod-Tap設定の改善

&mt {
    flavor = "tap-preferred";     // タップ優先
    tapping-term-ms = <200>;      // 適切な長押し時間
    quick-tap-ms = <150>;          // 連続タップ対応
    retro-tap;                     // 長押し失敗時の救済
};

&lt {
    quick-tap-ms = <175>;  // 連続タップを175ms以内なら確実に処理
    // これだけでスペース連続入力が改善される
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kp W         &kp E        &kp R             &kp T                                                      &kp Y          &kp U  &kp I      &kp O    &kp P
&kp A        &kp S         &kp D        &kp F             &kp G             &kp LG(LS(S))      &kp LA(BACKSPACE)     &kp H          &kp J  &kp K      &kp L    &kp MINUS
&kp Z        &kp X         &kp C        &kp V             &kp B             &mkp MB1           &mkp MB2              &kp N          &kp M  &kp COMMA  &kp DOT  &kp LEFT_SHIFT
&lt 5 LCTRL  &kp LEFT_WIN  &lt 6 GRAVE  &lt 3 LANGUAGE_2  &lt 2 LANGUAGE_1  &lt 1 SPACE        &mt LEFT_SHIFT ENTER  &kp BACKSPACE                             &kp LCTRL
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        FUNCTION {
            bindings = <
&kp EXCLAMATION   &kp JP_DQUOTE     &kp HASH     &kp DOLLAR       &kp PERCENT                                   &kp JP_LPAREN    &kp JP_RPAREN    &kp LESS_THAN  &kp GREATER_THAN  &kp JP_TILDE
&kp JP_AMPERSAND  &kp JP_QUOTE      &kp MINUS    &kp JP_EQUAL     &kp JP_UNDERSCORE  &trans      &kp LC(C)      &kp JP_LBRACE    &kp JP_RBRACE    &kp SEMI       &kp JP_COLON      &kp JP_PIPE
&kp JP_CARET      &kp JP_BACKQUOTE  &kp JP_PLUS  &kp JP_ASTERISK  &kp QUESTION       &trans      &kp LC(V)      &kp JP_LBRACKET  &kp JP_RBRACKET  &kp SLASH      &kp JP_YEN        &kp JP_AT
&trans            &trans            &trans       &trans           &trans             &trans      &kp LA(ENTER)  &trans                                                             &trans
            >;
        };

        NUM {
            bindings = <
&none    &kp F2   &kp F3  &kp F4  &kp F5                              &none   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none
&none    &kp F7   &kp F8  &kp F9  &kp F10  &trans      &kp LC(C)      &none   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &none
&kp F11  &kp F12  &none   &none   &none    &trans      &kp LC(V)      &none   &kp N7        &kp N8        &kp N9        &kp N0
&trans   &trans   &trans  &trans  &trans   &trans      &kp LA(ENTER)  &trans                                            &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE  &kp PAGE_UP         &kp HOME  &kp LS(TAB)  &mkp MB4                             &none     &kp HOME        &kp UP_ARROW    &kp END          &kp BACKSPACE
&kp DELETE  &kp PAGE_DOWN       &kp END   &kp TAB      &mkp MB5  &trans      &kp LC(C)      &mkp MB4  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &mkp MB5
&kp INSERT  &kp LA(LC(DELETE))  &none     &none        &none     &trans      &kp LC(V)      &none     &kp LS(TAB)     &kp LALT        &kp TAB          &trans
&trans      &trans              &trans    &trans       &trans    &trans      &kp LA(ENTER)  &trans                                                     &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
